# Reference the common CI variables used in multiple pipelines
variables:
- group: PowerShell CI Shared Variables

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
  paths:
    exclude:
    - README.md
    - CHANGELOG.md

# Stage to build and test the PowerShell module on different hosts
stages:
- stage: Build
  jobs:
  - template: azure-pipelines-build.yml
    parameters:
      jobName: Linux
      displayName: Linux PowerShell Core
      vmImage: ubuntu-16.04
      executable: pwsh

  - template: azure-pipelines-build.yml
    parameters:
      jobName: Windows_Desktop_x64
      displayName: Windows PowerShell Desktop - x64
      vmImage: windows-2019
      executable: powershell.exe

  - template: azure-pipelines-build.yml
    parameters:
      jobName: Windows_Desktop_x86
      displayName: Windows PowerShell Desktop - x86
      vmImage: windows-2019
      executable: '"%windir%\SysWOW64\WindowsPowerShell\v1.0\powershell.exe"'

  - template: azure-pipelines-build.yml
    parameters:
      jobName: Windows_Core
      displayName: Windows PowerShell Core
      vmImage: windows-2019
      executable: pwsh.exe

# Stage to publish the PowerShell module to PSGallery and optionally the GitHub repo. This only runs when a release has
# been made on GitHub that starts with 'v'.
- stage: Publish
  condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
  jobs:
  - job: Publish
    pool:
      vmImage: windows-2019
    steps:
    # TODO: See how this fits in with C# modules with different dll's
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: Windows PowerShell Desktop - x64
        targetPath: Build

    # Omit me if no code signing is needed
    - task: DownloadSecureFile@1
      displayName: Download code signing cert
      inputs:
        secureFile: ps_signing_cert.pfx  # This matches the name of the secure file

    - pwsh: |
        Install-Module -Name PSDeploy -Force
        Invoke-PSDeploy -Path ./deploy.psdeploy.ps1 -Recurse $false -Force -Tags Release
      displayName: Publish Nupkg
      env:
        PSGALLERY_TOKEN: $(psgallery_token)
        GITHUB_TOKEN: $(github_token)
        CODE_SIGNING_PASS: $(code_signing_pass)  # Omit me if no code signing is needed
